version: '2.1'
jobs:
  build:
    docker:
      - image: myparcelcom/kubectl-aws
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASSWORD}
    working_directory: ~/project
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate AWS
          command: |
            export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
            aws-login
      - run:
          name: Building and Pushing Docker images
          command: |
            NS=$(env_namespace)
            eval $(aws-ssm-params ${NS})
            IMAGE_TAG=$(image_tag)
            docker build \
              -t myparcelcom/api-specification:${IMAGE_TAG} \
              --build-arg API_HOST=${API_HOST} \
              --build-arg AUTH_HOST=${AUTH_HOST} \
              -f docker/build/Dockerfile .
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
            docker push myparcelcom/api-specification:${IMAGE_TAG}

  deploy:
    docker:
      - image: myparcelcom/kubectl-aws
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASSWORD}
    parameters:
      is_sandbox:
        type: string
        default: "false"
    environment:
      IS_SANDBOX: <<parameters.is_sandbox>>
    steps:
      - checkout
      - run:
          name: Bootstrap AWS EKS and kubectl
          command: |
            export CLUSTER=$(cluster_name)
            export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
            bootstrap
      - run:
          name: Process templates
          command: |
            export NS=$(env_namespace)
            export IMAGE_TAG=$(image_tag)

            eval $(aws-ssm-params ${NS}/${CIRCLE_PROJECT_REPONAME}) # fetch project settings

            envsubst < kube/deployment.template.yaml > kube/deployment.yaml
            envsubst < kube/service.template.yaml > kube/service.yaml
      - run:
          name: Deploy
          command: |
            kubectl apply -f kube/deployment.yaml
            kubectl apply -f kube/service.yaml

workflows:
  deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - develop
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - deploy:
          is_sandbox: "true"
          requires:
            - build
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop
