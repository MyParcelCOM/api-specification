{
  "type": "object",
  "properties": {
    "created_at": {
      "type": "object",
      "description": "Either the `created_at`, `approved_at` or the `paid_at` filter is required for creating a report.",
      "required": [
        "date_from",
        "date_to"
      ],
      "properties": {
        "date_from": {
          "type": [
            "string",
            "number"
          ],
          "description": "Date string in YYYY-MM-DD format (UTC) or unix timestamp. Only returns created at >= this date will be in the report.",
          "example": "2024-02-01"
        },
        "date_to": {
          "type": [
            "string",
            "number"
          ],
          "description": "Date string in YYYY-MM-DD format (UTC) or unix timestamp. Only returns created at <= this date will be in the response.",
          "example": "2024-03-01"
        }
      }
    },
    "approved_at": {
      "type": "object",
      "description": "Either the `created_at`, `approved_at` filter or the `paid_at` filter is required for creating a report.",
      "required": [
        "date_from",
        "date_to"
      ],
      "properties": {
        "date_from": {
          "type": [
            "string",
            "number"
          ],
          "description": "Date string in YYYY-MM-DD format (UTC) or unix timestamp. Only returns approved at >= this date will be in the report.",
          "example": "2024-02-01"
        },
        "date_to": {
          "type": [
            "string",
            "number"
          ],
          "description": "Date string in YYYY-MM-DD format (UTC) or unix timestamp.Only returns approved at <= this date will be in the response.",
          "example": "2024-03-01"
        }
      }
    },
    "order_reference": {
      "type": "string",
      "description": "Filter entries by order reference. This is a strict search, meaning that only if the search string matches the `order_reference` attribute of a return completely, will the entries be included.",
      "example": "MP000000012"
    },
    "item_external_reference": {
      "type": "string",
      "description": "Filter entries by return order item's reference code in the origin marketplace.",
      "example": "#123456"
    },
    "item_sku": {
      "type": "string",
      "description": "Filter entries by return order item's SKU (exact match).",
      "example": "SKU123"
    },
    "shops": {
      "type": "array",
      "description": "Array of shop IDs to filter included returns by.",
      "items": {
        "$ref": "#/components/schemas/Uuid"
      },
      "example": [
        "35eddf50-1d84-47a3-8479-6bfda729cd99",
        "a294ee55-bc94-4890-b734-afd56c158f95"
      ]
    },
    "organizations": {
      "type": "array",
      "description": "Array of organization IDs to filter included returns by.",
      "items": {
        "$ref": "#/components/schemas/Uuid"
      },
      "example": [
        "35eddf50-1d84-47a3-8479-6bfda729cd99",
        "a294ee55-bc94-4890-b734-afd56c158f95"
      ]
    },
    "brokers": {
      "type": "array",
      "description": "Array of broker IDs to filter included returns by.",
      "items": {
        "$ref": "#/components/schemas/Uuid"
      },
      "example": [
        "35eddf50-1d84-47a3-8479-6bfda729cd99",
        "a294ee55-bc94-4890-b734-afd56c158f95"
      ]
    },
    "outbound_shipment_identifier": {
      "type": "string",
      "description": "Filter entries by return order's outbound shipment tracking code.",
      "example": "#123456"
    },
    "preferred_outcome": {
      "type": "string",
      "enum": [
        "refund",
        "exchange"
      ],
      "description": "Filter entries by return order item's preferred outcome.",
      "example": "exchange"
    },
    "return_methods": {
      "type": "array",
      "description": "Array of return method IDs to filter included returns by.",
      "items": {
        "$ref": "#/components/schemas/Uuid"
      },
      "example": [
        "a294ee55-bc94-4890-b734-afd56c158f95",
        "c8ac2fc8-2e75-4614-9e56-aa270d4338b0"
      ]
    },
    "paid_at": {
      "type": "object",
      "description": "Either the `created_at`, `approved_at` filter or the `paid_at` filter is required for creating a report.",
      "required": [
        "date_from",
        "date_to"
      ],
      "properties": {
        "date_from": {
          "type": [
            "string",
            "number"
          ],
          "description": "Date string in YYYY-MM-DD format (UTC) or unix timestamp. Only returns paid at >= this date will be in the report.",
          "example": "2024-02-01"
        },
        "date_to": {
          "type": [
            "string",
            "number"
          ],
          "description": "Date string in YYYY-MM-DD format (UTC) or unix timestamp. Only returns paid at <= this date will be in the response.",
          "example": "2024-03-01"
        }
      }
    },
    "return_reasons": {
      "type": "array",
      "description": "Array of return reason codes to filter by. Only entries that correspond with one of the return reason codes will be in the report.",
      "items": {
        "type": "string"
      },
      "example": [
        "product-damaged",
        "product-is-defect"
      ]
    },
    "return_statuses": {
      "type": "array",
      "description": "Array of return status codes to filter by. Only entries that correspond with one of the return status codes will be in the report.",
      "items": {
        "type": "string"
      },
      "example": [
        "return-pending",
        "return-approved"
      ]
    },
    "consumer_country_code": {
      "allOf": [
        {
          "$ref": "#/components/schemas/CountryCode"
        },
        {
          "description": "Filter entries by return's consumer country code."
        }
      ]
    },
    "consumer_email": {
      "allOf": [
        {
          "$ref": "#/components/schemas/Email"
        },
        {
          "description": "Filter entries by return's consumer email address (exact match)."
        }
      ]
    }
  }
}
