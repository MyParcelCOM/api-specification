{
  "description": "A JSON Schema property",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "type",
    "description"
  ],
  "properties": {
    "type": {
      "description": "The data type of the schema property",
      "type": "string",
      "example": "string",
      "enum": [
        "string",
        "number",
        "boolean",
        "object",
        "array"
      ]
    },
    "description": {
      "description": "The description of the schema property",
      "type": "string",
      "example": "Example schema property"
    },
    "required": {
      "description": "Array of required schema properties. Used when the `properties` attribute contains nested schema",
      "type": "array",
      "items": {
        "type": "string",
        "example": "exampleSchemaPropertyName"
      }
    },
    "items": {
      "type": "object",
      "description": "<a href=\"https://json-schema.org/understanding-json-schema/reference/array#items\">JSON schema array items</a>. Only used when the schema property type is `array`",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "description": "Data type of the enum values. Only valid value is \"string\"",
          "enum": [
            "string"
          ],
          "example": "string"
        },
        "enum": {
          "type": "array",
          "description": "Enum values for schema type properties. Only `string` values are supported",
          "items": {
            "type": "string"
          },
          "example": [
            "value-1",
            "value-2"
          ]
        }
      }
    },
    "enum": {
      "type": "array",
      "description": "Enum values for schema properties",
      "items": {
        "type": "string"
      },
      "example": [
        "enum-value-1",
        "enum-value-2"
      ]
    },
    "properties": {
      "description": "Nested schema properties of type `object`, following the <a href=\"https://json-schema.org/understanding-json-schema/reference/object#properties\">object specification</a>. Object schemas can be nested indefinitely under the `properties` key",
      "additionalProperties": {
        "type": "object"
      },
      "example": {
        "nested": {
          "schema": {
            "property": {}
          }
        }
      }
    },
    "meta": {
      "type": "object",
      "description": "Properties beyond the JSON Schema specification that help determine how a schema property should be rendered in a form",
      "additionalProperties": false,
      "properties": {
        "help": {
          "type": "string",
          "description": "A help message that describes the schema property",
          "example": "This is a help message for the schema property"
        },
        "password": {
          "type": "boolean",
          "description": "Indicates whether the value of the schema property should be masked. Only used when the schema property type is `string`",
          "example": false
        },
        "field_type": {
          "type": "string",
          "description": "Indicates the type of (input) UI that is expected to render this schema property. Used to differentiate between properties that have the same schema format",
          "enum": [
            "select",
            "radio"
          ],
          "example": "radio"
        },
        "label_translations": {
          "type": "object",
          "description": "Key/value pair where the key is a locale code, e.g. \"en-GB\", and the value is the translated `description` of the schema property",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "type": "string",
              "description": "The translated description of the schema property"
            }
          },
          "example": {
            "de-DE": "The description of the schema property in German",
            "fr-FR": "The description of the schema property in French"
          }
        },
        "enum_labels": {
          "type": "object",
          "description": "Key/value pair using enum values as keys and human-readable labels as values",
          "additionalProperties": {
            "description": "Human readable label",
            "type": "string"
          },
          "example": {
            "enum-value-1": "Enum value 1",
            "enum-value-2": "Enum value 2"
          }
        },
        "enum_label_translations": {
          "type": "object",
          "description": "Key/value pair using enum values as keys and objects containing translated human-readable labels as values",
          "additionalProperties": {
            "type": "object",
            "description": "Key/value pair using locale codes as keys (e.g. \"en-GB\"), and translated human readable labels as values",
            "additionalProperties": false,
            "patternProperties": {
              "^[a-z]{2}-[A-Z]{2}$": {
                "description": "Translated human readable label",
                "type": "string"
              }
            }
          },
          "example": {
            "enum-value-1": {
              "de-DE": "Enum value 1 in German",
              "fr-FR": "Enum value 1 in French"
            },
            "enum-value-2": {
              "de-DE": "Enum value 2 in German",
              "fr-FR": "Enum value 2 in French"
            }
          }
        }
      }
    }
  }
}
