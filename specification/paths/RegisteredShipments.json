{
  "post": {
    "tags": [
      "Shipments"
    ],
    "security": [
      {
        "OAuth2": [
          "shipments.manage"
        ]
      }
    ],
    "summary": "Create a new shipment which is immediately registered with the carrier.",
    "description": "This endpoint creates a new shipment with the posted data, which is then immediately communicated to the carrier. The carrier response is processed before your request is completed, so files will be available.",
    "parameters": [
      {
        "$ref": "#/components/parameters/header-idempotency-key"
      }
    ],
    "requestBody": {
      "description": "The shipment object to be created.",
      "required": true,
      "content": {
        "application/vnd.api+json": {
          "schema": {
            "type": "object",
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "properties": {
              "data": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Shipment"
                  },
                  {
                    "required": [
                      "attributes",
                      "relationships"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true
                      },
                      "attributes": {
                        "required": [
                          "recipient_address",
                          "return_address",
                          "sender_address",
                          "physical_properties"
                        ],
                        "properties": {
                          "recipient_address": {
                            "required": [
                              "first_name",
                              "last_name",
                              "street_1",
                              "city",
                              "country_code"
                            ]
                          },
                          "return_address": {
                            "required": [
                              "street_1",
                              "city",
                              "country_code"
                            ]
                          },
                          "sender_address": {
                            "required": [
                              "street_1",
                              "city",
                              "country_code"
                            ]
                          },
                          "pickup_location": {
                            "required": [
                              "code",
                              "address"
                            ]
                          },
                          "tracking_code": {
                            "readOnly": true
                          },
                          "physical_properties": {
                            "required": [
                              "weight"
                            ]
                          },
                          "items": {
                            "items": {
                              "required": [
                                "description",
                                "quantity"
                              ]
                            }
                          }
                        }
                      },
                      "relationships": {
                        "required": [
                          "shop"
                        ]
                      }
                    }
                  }
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "collection": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "collection_time": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": [
                              "number",
                              "string"
                            ],
                            "example": 1647878216,
                            "description": "Unix timestamp (UTC) or ISO 8601 formatted time string of the requested minimum collection time."
                          },
                          "to": {
                            "type": [
                              "number",
                              "string"
                            ],
                            "example": "2022-03-22T20:00:00+01:00",
                            "description": "Unix timestamp (UTC) or ISO 8601 formatted time string of the requested maximum collection time."
                          }
                        }
                      }
                    }
                  },
                  "label_mime_type": {
                    "type": "string",
                    "example": "application/pdf",
                    "deprecated": true,
                    "description": "Deprecated, use `label.mime_type` instead. In case both are used, `label.mime_type` will get priority."
                  },
                  "label": {
                    "type": "object",
                    "properties": {
                      "mime_type": {
                        "type": "string",
                        "example": "application/pdf",
                        "default": "application/pdf",
                        "description": "Requested `mime_type` for the label of this shipment. Available mime_types can be found on the carrier resource related to the chosen service/contract."
                      },
                      "size": {
                        "type": "string",
                        "example": "A6",
                        "default": "A6",
                        "description": "Requested size for the label of this shipment. Available label sizes can be found on the carrier resource related to the chosen service/contract."
                      }
                    }
                  },
                  "service_code": {
                    "type": "string",
                    "example": "carrier-parcel-next-day",
                    "description": "If an applicable service is found, it will be set as relationship. If no contract relationship is defined, the cheapest contract for this service will be applied."
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "The shipment is created.",
        "headers": {
          "Idempotency-Replay": {
            "description": "Present with value `true` when the response is replayed based on the provided `Idempotency-Key` header.",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "required": [
                "data",
                "meta"
              ],
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ShipmentResponse"
                    },
                    {
                      "properties": {
                        "relationships": {
                          "required": [
                            "contract",
                            "files",
                            "service"
                          ]
                        }
                      }
                    }
                  ]
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "description": "An array of objects holding the attributes and contents (Base64 encoded) of created files",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileFormat"
                          },
                          {
                            "required": [
                              "document_type",
                              "contents"
                            ],
                            "properties": {
                              "document_type": {
                                "$ref": "#/components/schemas/DocumentType"
                              },
                              "contents": {
                                "type": "string",
                                "description": "Base64 encoded file data"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "422": {
        "description": "The shipment could not be created because the carrier did not accept the supplied information."
      },
      "423": {
        "description": "The previous request with the same idempotency key is still being processed."
      }
    }
  }
}
